＃
＿次ステートは「S_START」
＿今ステートは空
＿ループ状態はオン

＃＿コールスタック定義
＿コールスタック最大値は５

＿コールスタックは空配列
＿コールスタック＠０は空
＿コールスタック＠１は空
＿コールスタック＠２は空
＿コールスタック＠３は空
＿コールスタック＠４は空

＿コールスタックレベルは０

＃
＃ 【StateGoの自動挿入開始】 indent(0) $/./$
＃             psggConverterLib.dll converted from psgg-file:TestControl.psgg

＃【組込】
＃E_LOOP1
＃
ループ変数は０
＃
●S_0000とは
    ＃
    「こんにちは、なでしこさん！」と言う
    もし、＿次ステートが空ならば
        ＿次ステートに「S_GSB000」を代入
    ここまで
    戻る
ここまで
＃
●S_0001とは
    ＃
    「サブルーチンが実行中です」と言う
    もし、＿次ステートが空ならば
        ＿次ステートに「S_RET000」を代入
    ここまで
    戻る
ここまで
＃
●S_ENDとは
    ＃
    戻る
ここまで
＃
●S_EVENとは
    ＃
    「｛ループ変数｝は偶数です」と言う
    もし、＿次ステートが空ならば
        ＿次ステートに「S_RETURN2」を代入
    ここまで
    戻る
ここまで
＃
●S_GSB000とは
    ＃
    もし、（＿コールスタックレベル＞＝(＿コールスタック最大値＋１)）ならば
    	「＿コールスタックがオーバーフローしました」と言う
    	＿ループ状態はオフ
    	戻る
    ここまで
    ＿コールスタック＠＿コールスタックレベルに「S_LOOP」を代入
    ＿コールスタックレベルに１を足して、＿コールスタックレベルに代入
    ＿次ステートに「S_SBS000」を代入
    戻る
ここまで
＃
●S_LOOPとは
    ＃１０回繰り返す
    ループ変数は０
    ＿次ステートに「S_LOOP_cond____」を代入
    戻る
ここまで
●S_LOOP_cond____とは
    もし、（ループ変数＜１０）ならば
        もし、（＿コールスタックレベル＞＝(＿コールスタック最大値＋１)）ならば
        	「＿コールスタックがオーバーフローしました」と言う
        	＿ループ状態はオフ
        	戻る
        ここまで
        ＿コールスタック＠＿コールスタックレベルに「S_LOOP_next____」を代入
        ＿コールスタックレベルに１を足して、＿コールスタックレベルに代入
        ＿次ステートに「S_SUBSTART2」を代入
    違えば
        ＿次ステートに「S_END」を代入
    ここまで
    戻る
ここまで
●S_LOOP_next____とは
    ループ変数＝ループ変数＋１
    ＿次ステートに「S_LOOP_cond____」を代入
    戻る
ここまで
＃
●S_ODDとは
    ＃
    「{ループ変数}は奇数です」と言う
    もし、＿次ステートが空ならば
        ＿次ステートに「S_RETURN2」を代入
    ここまで
    戻る
ここまで
＃
●S_ODD_OR_EVENとは
    ＃
    アマリ＝ループ変数　％　２
    もし、（アマリ＝０）ならば
        ＿次ステートに「S_ODD」を代入
    違えば
        ＿次ステートに「S_EVEN」を代入
    ここまで
    戻る
ここまで
＃
●S_RET000とは
    ＃
    もし、（＿コールスタックレベル＜＝０）ならば
    	「＿コールスタックがアンダーフローしました」と言う
    	終
    ここまで
    ＿コールスタックレベルから１を引いて、＿コールスタックレベルに代入
    ＿コールスタック＠＿コールスタックレベルを＿次ステートに代入
    戻る
ここまで
＃
●S_RETURN2とは
    ＃
    もし、（＿コールスタックレベル＜＝０）ならば
    	「＿コールスタックがアンダーフローしました」と言う
    	終
    ここまで
    ＿コールスタックレベルから１を引いて、＿コールスタックレベルに代入
    ＿コールスタック＠＿コールスタックレベルを＿次ステートに代入
    戻る
ここまで
＃
●S_SBS000とは
    ＃
    もし、＿次ステートが空ならば
        ＿次ステートに「S_0001」を代入
    ここまで
    戻る
ここまで
＃
●S_STARTとは
    ＃
    もし、＿次ステートが空ならば
        ＿次ステートに「S_0000」を代入
    ここまで
    戻る
ここまで
＃
●S_SUBSTART2とは
    ＃
    もし、＿次ステートが空ならば
        ＿次ステートに「S_ODD_OR_EVEN」を代入
    ここまで
    戻る
ここまで


＃ 【StateGoの自動挿入終了】

ループカウンタは０
ループカウンタ最大値は１００００

＿ループ状態はオン

（＿ループ状態＝オン）の間
	ループカウンタに１を足して、ループカウンタに代入する
	もし、ループカウンタ＝ループカウンタ最大値ならば
		「エラー：ループカウンタが最大値{ループカウンタ}に達しました」と言う
　　　　＃終了
　　　　＿今ステートは空
        ＿次ステートは空
		＿ループ状態はオフ
	ここまで
	＃
	もし、＿次ステートが空でなければ
		＿今ステートに＿次ステートを代入
		＿次ステートに空を代入
	ここまで
	＃
	もし、＿今ステートが空でなければ
	    ／／「実行ステートは{＿今ステート}です」と言う
        ＃【StateGoの自動挿入開始】 indent(8) $/^S_/->#switch$
        ＃             psggConverterLib.dll converted from psgg-file:TestControl.psgg

        もし、（＿今ステート＝「S_0000」）ならば、S_0000する
        もし、（＿今ステート＝「S_0001」）ならば、S_0001する
        もし、（＿今ステート＝「S_END」）ならば、S_ENDする
        もし、（＿今ステート＝「S_EVEN」）ならば、S_EVENする
        もし、（＿今ステート＝「S_GSB000」）ならば、S_GSB000する
        もし、（＿今ステート＝「S_LOOP」）ならば、S_LOOPする
        もし、（＿今ステート＝「S_LOOP_cond____」）ならば、S_LOOP_cond____する
        もし、（＿今ステート＝「S_LOOP_next____」）ならば、S_LOOP_next____する
        もし、（＿今ステート＝「S_ODD」）ならば、S_ODDする
        もし、（＿今ステート＝「S_ODD_OR_EVEN」）ならば、S_ODD_OR_EVENする
        もし、（＿今ステート＝「S_RET000」）ならば、S_RET000する
        もし、（＿今ステート＝「S_RETURN2」）ならば、S_RETURN2する
        もし、（＿今ステート＝「S_SBS000」）ならば、S_SBS000する
        もし、（＿今ステート＝「S_START」）ならば、S_STARTする
        もし、（＿今ステート＝「S_SUBSTART2」）ならば、S_SUBSTART2する


		＃【StateGoの自動挿入終了】
		もし、（＿今ステート＝「S_END」）ならば
			「終了」と言う
			＿ループ状態はオフ
		ここまで
	ここまで


　
/*
以下は、StateGoのマクロです。

:psgg-macro-start

; コメント行  {%0}はコメントに変換
commentline=＃ {%0}

#switch=@@@
もし、（＿今ステート＝「[[state]]」）ならば、[[state]]する
<<<?state-typ/^loop$/
もし、（＿今ステート＝「[[state]]_cond____」）ならば、[[state]]_cond____する
もし、（＿今ステート＝「[[state]]_next____」）ならば、[[state]]_next____する
>>>
@@@

@branch=@@@
<<<?"{%0}"/^brif$/
もし、（[[brcond:{%N}]]）ならば
    ＿次ステートに「{%1}」を代入
ここまで
>>>
<<<?"{%0}"/^brifc$/
もし、（[[brcond:{%N}]]）ならば
    ＿次ステートに「{%1}」を代入
>>>
<<<?"{%0}"/^brelseif$/
違えば、もし、（[[brcond:{%N}]]）ならば
    ＿次ステートに「{%1}」を代入
ここまで    
>>>
<<<?"{%0}"/^brelseifc$/
違えば、もし、（[[brcond:{%N}]]）ならば
    ＿次ステートに「{%1}」を代入
>>>
<<<?"{%0}"/^brelse$/
違えば
    ＿次ステートに「{%1}」を代入
ここまで
>>>
@@@

gosub=@@@
もし、（＿コールスタックレベル＞＝(＿コールスタック最大値＋１)）ならば
	「＿コールスタックがオーバーフローしました」と言う
	＿ループ状態はオフ
	戻る
ここまで
＿コールスタック＠＿コールスタックレベルに「{%2}」を代入
＿コールスタックレベルに１を足して、＿コールスタックレベルに代入
＿次ステートに「{%1}」を代入
@@@

return=@@@
もし、（＿コールスタックレベル＜＝０）ならば
	「＿コールスタックがアンダーフローしました」と言う
	終
ここまで
＿コールスタックレベルから１を引いて、＿コールスタックレベルに代入
＿コールスタック＠＿コールスタックレベルを＿次ステートに代入
@@@

:psgg-macro-end
*/





