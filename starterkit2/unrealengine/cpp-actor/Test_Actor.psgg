;PSGG Editor Backup File
version=1.1
file=Test_Actor.xlsx
guid=2c5f6691-eacd-448f-9ed3-590219116a8c
;set read_from  excel or psgg
read_from=psgg
;set savemode with_excel or psgg_only
save_mode=psgg_only
;set check_excel_writable yes or no
check_excel_writable=no

------#======*<Guid(D13821FE-FA27-4B04-834C-CEC1E5670F48)>*======#------

sheet=state-chart
nameid_list=,n001,n002,n003,n004,n019,n005,,n01a,n006,,n024,n026,n025,n021,n007,,n008,n009,n00a,n00b,,n00c,n00d,,n00e,n00f,,n010,n011,n01c,n01d,n01e,n01f,n020,,n012,n013,n014,n015,,n01b,n016,n017,n018,,,,,,,,
stateid_list=,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,s0023,s0024,s003e,s003f,s0040,s0041,s0042,,,,,,,,,,,s0033,s0036,,s0038,,,,,,,
max_name_id=38
max_state_id=66
[id_name_dic]
n001=thumbnail
n002=state
n003=state-cmt
n004=state-ref
n005=nextstate
n006=embed
n007=members
n008=vars
n009=init
n00a=init-cmt
n00b=init-ref
n00c=update
n00d=update-cmt
n00e=wait
n00f=wait-cmt
n010=post_wait
n011=post_wait-cmt
n012=branch
n013=branch-cmt
n014=brcond
n015=nowait
n016=!dir
n017=!pos
n018=!uuid
n019=state-typ
n01a=basestate
n01b=gosubstate
n01c=return
n01d=loop
n01e=loop_init
n01f=loop_cond
n020=loop_next
n021=construct
n024=inchpp
n025=inccpp
n026=incclass


[id_state_dic]
s0023=S_START
s0024=S_END
s0033=E_HEADERS
s0036=E_EMBED
s0038=C_0001
s003e=S_SBS000
s003f=S_LOP000
s0040=S_0000
s0041=S_0001
s0042=S_RET000


[s0023]
n002=S_START
n019=start
n005=S_0000
n016=@@@
/
(100,100)
The root
@@@

n017=320,496
n018=1

[s0024]
n002=S_END
n019=end
n016=@@@
/
(100,100)
The root
@@@

n017=1309,335
n018=2

[s0033]
n002=E_HEADERS
n003=ヘッダ
n024=//hpp側インクルール
n026=//参照class羅列
n025=//CPP側インクルード
n016=@@@
/
(100,100)
The root
@@@

n017=27,70
n018=17

[s0036]
n002=E_EMBED
n007=@@@
$m:UV$
bool m_test;
$m:UE$
int m_max;
@@@

n016=@@@
/
(100,100)
The root
@@@

n017=28,192
n018=20

[s0038]
n001=(bitmap)
n002=C_0001
n003=サンプル
n004=
n016=@@@
/
(100,100)
The root
@@@

n017=24,7
n018=28

[s003e]
n002=S_SBS000
n019=substart
n005=S_0001
n016=@@@
/
(100,100)
The root
@@@

n017=907,597
n018=29

[s003f]
n002=S_LOP000
n019=loop
n005=S_END
n021=m_i(0)
n007=int m_i;
n01e=m_i = 0;
n01f=m_i < 10
n020=m_i++;
n01b=S_SBS000
n016=@@@
/
(100,100)
The root
@@@

n017=797,500
n018=30

[s0040]
n002=S_0000
n005=S_LOP000
n009=LOG("HELLO STATEGO");
n016=@@@
/
(100,100)
The root
@@@

n017=502,496
n018=31

[s0041]
n002=S_0001
n005=S_RET000
n009=LOG("HI!!!");
n016=@@@
/
(100,100)
The root
@@@

n017=1028,603
n018=32

[s0042]
n002=S_RET000
n019=subreturn
n016=@@@
/
(100,100)
The root
@@@

n017=1281,607
n018=33



------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=config

###VARIOUS-CONTENTS-BEGIN###
; The setting was created automatically. 2024/04/14 11:47:53
; * pssgEditor version : 0.75.20053.2e04106e66c7480f597f2d0c42a3c40456eeb840
psggfile=@@@
Test_Actor.psgg
@@@
xlsfile=@@@
Test_Actor.xlsx
@@@
guid=@@@
2c5f6691-eacd-448f-9ed3-590219116a8c
@@@
bitmap_width=5000
bitmap_height=2000
c_statec_cmt=1
c_thumbnail=1
c_contents=1
force_display_outpin=0
last_action=@@@
init,Saved
@@@
target_pathdir=@@@
/
@@@
state_location_list=@@@

@@@
nodegroup_comment_list=@@@
[{"Key":"\/","Value":"The root"}]
@@@
nodegroup_pos_list=@@@
[{"Key":"\/","Value":{"x":100,"y":100}}]
@@@
fillter_state_location_list=@@@
[{"Key":"\/","Value":[{"Key":"S_START","Value":{"x":320,"y":496}},{"Key":"S_END","Value":{"x":1309,"y":335}},{"Key":"S_0000","Value":{"x":502,"y":496}},{"Key":"E_HEADERS","Value":{"x":27,"y":70}},{"Key":"C_0001","Value":{"x":24,"y":7}},{"Key":"E_EMBED","Value":{"x":28,"y":192}},{"Key":"S_SBS000","Value":{"x":907,"y":597}},{"Key":"S_LOP000","Value":{"x":797,"y":500}},{"Key":"S_0001","Value":{"x":1028,"y":603}},{"Key":"S_RET000","Value":{"x":1281,"y":607}}]}]
@@@
linecolor_data=@@@
[{"color":{"knownColor":0,"name":null,"state":2,"value":4285493103},"pattern":"BACKTO_"}]
@@@
use_external_command=0
external_command=@@@

@@@
source_editor_set=@@@

@@@
label_show=0
label_text=@@@
test
@@@
option_delete_thisstring=1
option_delete_br_string=1
option_delete_bracket_string=1
option_delete_s_state_string=1
option_copy_output_to_clipboard=0
option_convert_with_confirm=0
option_ignore_case_of_state=0
option_editbranch_automode=1
option_use_custom_prefix=0
option_omit_basestate_string=0
option_hide_basestate_contents=1
option_hide_branchcmt_onbranchbox=0
font_name=@@@
MS UI Gothic
@@@
font_size=11
comment_font_size=0
contents_font_size=0
state_width=140
state_height=20
state_short_width=50
state_short_height=20
comment_block_height=20
content_max_height=200
comment_block_fixed=0
line_space=-1
userbutton_title=@@@

@@@
userbutton_command=@@@

@@@
userbutton_callafterconvert=0
itemeditform_size_list=@@@
[{"Key":"init","Value":{"height":696,"width":849}},{"Key":"update","Value":{"height":548,"width":951}},{"Key":"members","Value":{"height":499,"width":760}}]
@@@
decoimage_typ_name=@@@
sym
@@@
use_donotedit_mark=1
donotedit_mark_columns=@@@
76,116,136
@@@
donotedit_mark=@@@
*DoNotEdit*
@@@
special_condition=@@@
ue5-actor
@@@

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-source

###VARIOUS-CONTENTS-BEGIN###

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-statefunc

###VARIOUS-CONTENTS-BEGIN###
<<<?state/^C_/
eof>>>
/*
    [[state]]
        [[inchpp]]
        [[incclass]]
        [[inccpp]]
        [[construct]]
        [[members]]
    [[state-cmt]]
*/

<<<?state/^E_/
[[embed]]
eof>>>

<<<?state-typ/^start$/
void A$statemachine$::[[state]](bool bFirst)
{
    Goto(&A$statemachine$::[[nextstate]]);
    NoWait();
}
eof>>>

<<<?state-typ/^end$/
void A$statemachine$::[[state]](bool bFirst)
{
}
eof>>>
<<<?state-typ/^gosub$/
void A$statemachine$::[[state]](bool bFirst)
{
    GoSubState(&A$statemachine$::[[gosubstate]],&A$statemachine$::[[nextstate]]);
    NoWait();
}
eof>>>

<<<?state-typ/^substart$/
void A$statemachine$::[[state]](bool bFirst)
{
    Goto(&A$statemachine$::[[nextstate]]);
    NoWait();
}
eof>>>

<<<?state-typ/^subreturn$/
void A$statemachine$::[[state]](bool bFirst)
{
    ReturnState();
    NoWait();
}
eof>>>

<<<?state-typ/^loop$/
void A$statemachine$::[[state]](bool bFirst)
{
    [[loop_init]]
    Goto(&A$statemachine$::[[state]]_LoopCheckAndGosub____);
    NoWait();
}
void A$statemachine$::[[state]]_LoopCheckAndGosub____(bool bFirst)
{
    if ([[loop_cond]]) GoSubState(&A$statemachine$::[[gosubstate]],&A$statemachine$::[[state]]_LoopNext____);
    else               Goto(&A$statemachine$::[[nextstate]]);
    NoWait();
}
void A$statemachine$::[[state]]_LoopNext____(bool bFirst)
{
    [[loop_next]]
    Goto(&A$statemachine$::[[state]]_LoopCheckAndGosub____);
    NoWait();
}
eof>>>

void A$statemachine$::[[state]](bool bFirst)
{
    [[vars]]

    <<<?init
    if (bFirst)
    {
        [[init]]
    }
    >>>

    [[update]]

    <<<?wait
    if ([[wait]]) return;
    >>>

    [[post_wait]]

    [[branch]]

    <<<?nextstate
    if (!HasNextState())
    {
        Goto(&A$statemachine$::[[nextstate]]);
    }
    >>>

    <<<?nowait
    if (HasNextState())
    {
        NoWait();
    }
    >>>
}
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=setting.ini

###VARIOUS-CONTENTS-BEGIN###
[setting]

psgg=Test_Actor.psgg
xls=Test_Actor.xlsx
gen_src=Test_Actor.cpp
gen_hpp=Test_Actor.h
manager_src=
manager_dir=

template_src=
template_func=template-statefunc.txt

help=help.ini
helpweb=@@@
starterkit2\unrealengine\cpp-actor\helpweb.html
@@@



src_enc=utf-8


kitpath=starterkit2\unrealengine\cpp-actor





[setupinfo]

starterkit=@@@
https://github.com/NNNIC/psgg-starter-kit.git 96dac25e38a9f35819d3606d886d4eb5b7ad4a50
@@@








lang=c++
framework=

statemachine=Test_Actor
prefix=__PREFIX__
xlsdir=C:\Temp\m1





gendir=C:\Temp\m1





genrdir=.
incrdir=.

code_output_start=[STATE-GO OUTPUT START]
code_output_end=[STATE-GO OUTPUT END]

; This section has macro defines for converting.

; commentline format  {%0} will be replaced to a comment.





[macro]

commentline=// {%0}

#execute_state=@@@
if (st == "[[state]]") { [[state]](bFirst); return; }
<<<?state-typ/^loop$/
if (st == &A$statemachine$::[[state]]_LoopCheckAndGosub____) { [[state]]_LoopCheckAndGosub____(bFirst); return; }
if (st == &A$statemachine$::[[state]]_LoopNext____)          { [[state]]_LoopNext____(bFirst); return; }
>>>
@@@







@branch=@@@
<<<?"{%0}"/^brifc{0,1}$/
if ([[brcond:{%N}]]) { Goto( &A$statemachine$::{%1} ); }
>>>
<<<?"{%0}"/^brelseifc{0,1}$/
else if ([[brcond:{%N}]]) { Goto( &A$statemachine$::{%1} ); }
>>>
<<<?"{%0}"/^brelse$/
else { Goto( &A$statemachine$::{%1} ); }
>>>
<<<?"{%0}"/^br_/
{%0}(&A$statemachine$::{%1});
>>>
@@@






#declare=@@@
<<<?state-typ/^gosub$/
void [[state]](bool bFirst);
eof>>>

<<<?state-typ/^substart$/
void [[state]](bool bFirst);
eof>>>

<<<?state-typ/^subreturn$/
void [[state]](bool bFirst);
eof>>>

<<<?state-typ/^loop$/
void [[state]](bool bFirst);
void [[state]]_LoopCheckAndGosub____(bool bFirst);
void [[state]]_LoopNext____(bool bFirst);
eof>>>

void [[state]](bool bFirst);

@@@


#memberlist=@@@
<<<?members
[[members]]
>>>
@@@


#constructlist=@@@
<<<?construct
[[construct]],
>>>
@@@


#b4clist=@@@
<<<?beforeclass
[[beforeclass]]
>>>
@@@


#exinccpplist=@@@
<<<?exinccpp
[[exinccpp]]
>>>
@@@


#inchpplist=@@@
<<<?inchpp
[[inchpp]]
>>>
@@@


#incclasslist=@@@
<<<?incclass
[[incclass]]
>>>
@@@


#inccpplist=@@@
<<<?inccpp
[[inccpp]]
>>>
@@@



UE=@@@
UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Settings)
@@@



UV=UPROPERTY(VisibleAnywhere)


[jpn]

title=Unreal Engine 5 C++ Actor 2024/4/14

detail=@@@
Unreal Engine 5 C++ Actor用のステートマシンを作成します。
関数ポインタ仕様のステートマシンを作成します。
宣言ファイル(h)と実装ファイル(cpp)の２つのファイルを生成します。


# ファイル

  以下のファイルを作成します。

      Test_Actor.pssg   --- StateGoデータファイル
      Test_Actor.h      --- 宣言ソース。変換コードが挿入される。
      Test_Actor.cpp    --- 実装ソース。変換コードが挿入される。

@@@






[en]

title=Unreal Engine 5 C++ Actor 2024/4/14

detail=@@@
# Files

      Test_Actor.pssg  --- StateGo Data File.
      Test_Actor.h     --- StateGo will convert data to this file.
      Test_Actor.cpp   --- StateGo will convert data to this file.

@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=help

###VARIOUS-CONTENTS-BEGIN###
[init]

jpn=初期化用処理を指定する。
en=Specify a initial process.
[inchpp]

jpn=ヘッダーへ追加インクルードファイテキスト
en=Add Include files Text in Header
[wait]

jpn=@@@
待ち条件を指定する。
true時にループを解除する。
@@@

en=@@@
Specify a waiting condition.
Release the loop if the condition is true.
@@@

[before-class]

en=Insert the text before class define
jpn=クラス定義の前にテキストを挿入する
[beforeclass]

en=Insert the text before class define
jpn=クラス定義の前にテキストを挿入する
[incclass]

en=class names for header
jpn=ヘッダーに追加するクラス名
[embed]

jpn=@@@
コード埋め込み用。
ステート名がE_時に利用可能。
ステート機能は利用できない。
@@@

en=@@@
For embedding code.
Enable this section if state name starts with "E_".
Disabled state features.
@@@

[inccpp]

en=Add Include File Text in CPP
jpn=CPPファイルへ追加するインクルードファイル
[gosubstate]

en=Specify a state of starting subroutine.
jpn=サブルーチンの開始ステートを指定
[loop_cond]

en=loop condition
jpn=ループ条件
[branch]

jpn=@@@
分岐処理を指定する。
１行に一つの分岐命令を書く。
GUIにより上書きされるため引数は適当に指定する。
例）
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

en=@@@
Specify branch functions.
Each line has a branch function.
Specify a tentavie parameter for each branch function because GUI overwrites the parameter.
i.e)
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

[construct]

en=@@@
write members initilize code for class construction
@@@

jpn=コンストラクション時の初期化コードを記入
[!dir]

jpn=システムがステートのディレクトリ指定に使用。
en=@@@
System uses this for the directory path of the state.
@@@

[return]

en=@@@
Use for returning from the subroutine. Write "return" etc.
@@@

jpn=サブルーチン処理を終了するときに指定する。"return"等を記述。
[nextstate]

jpn=次に実行するステートを指定する。
en=Specify the next state to be executed.
[nowait]

jpn=@@@
次のステートへ同期待ちをせず実行する時に 'nowait'等を指定する。
同期待ち時には何も指定しない。
@@@

en=@@@
Specify 'nowait' and so on if the next state will be execute without a sync wait.
Do not specify any word wheh the next state will be execute with a sync wait.
@@@

[members]

jpn=メンバ変数及び関数等を指定する。
en=@@@
Specify members, variables, classes,  etc.
@@@

[thumbnail]

jpn=説明用のイメージを指定する。
en=@@@
Specify a image for explanation of this state.
@@@

[post_wait]

jpn='wait'後の処理を指定する。
en=Specify the post process after 'wait'.
[vars]

jpn=変数宣言を指定する。
en=Specify variable definitions.
[!uuid]

jpn=システムがステートのuuid指定に使用。
en=@@@
System uses this for the uuid of the state.
@@@

[state]

jpn=@@@
ステート名を指定する。
英文字、数字、アンダーバーで構成される。
先頭は英文字およびアンダーバー。
@@@

en=@@@
Specify a state name.
The state name consits of alphabet, number and underbar except that the head characther should be alphabet or a underbar.
@@@

[members-init]

en=@@@
write members initilize code for class construction
@@@

jpn=コンストラクション時の初期化コードを記入
[exinccpp]

en=Add the text after include section.
jpn=cppファイルのインクルード部の追加テキスト
[update]

jpn=更新処理を指定する。
en=Specify a update process.
[loop_next]

en=loop  iterator advence.
jpn=ループのイテレーターを更新
[loop_init]

en=loop initialization
jpn=ループ用初期化
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=itemsinfo

###VARIOUS-CONTENTS-BEGIN###
[inpmethod]

init=
branch-cmt=
inchpp=
state-ref=
wait=
before-class=
beforeclass=
state-typ=
embed=
inccpp=
gosubstate=
loop_cond=
branch=
construct=
!dir=
return=
post_wait-cmt=
nowait=@@@
*select
nowait
@@@

members=
thumbnail=
incclass=
wait-cmt=
update-cmt=
post_wait=
state-cmt=
!pos=
!uuid=
nextstate=
state=
S_=
members-init=
exinccpp=
update=
init-cmt=
basestate=
loop_next=
vars=
loop=
C_=
brcond=
E_=
init-ref=
loop_init=
[stateloc]

E_=S1
S_=S0
C_=S2
[itemcond]

thumbnail=read_only,share,S.+
gosubstate=read_only,exclusion,(S0)
branch=read_only,exclusion,S0
state=read_only,share,S.+
nextstate=read_only,exclusion,S0
return=read_only,exclusion,(S0)
brcond=read_only,exclusion,S0
embed=read_only,exclusion,S1
basestate=read_only,exclusion,(S0)
state-typ=read_only,exclusion,(S0)
###VARIOUS-CONTENTS-END###



------#======*<Guid(4DC98CBA-6257-4E26-A454-A53F85BC234C)>*======#------


